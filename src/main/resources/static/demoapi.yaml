openapi: 3.0.0
info:
  title: demo API
  description: API to manage product, ordes and their relation process
  version: 1.0.0

servers:
  - url: http://localhost:8080
    description: local server

paths:
  /api/products:
    get:
      summary: Get all products
      operationId: getProducts
      tags:
        - Products
      responses:
        "200":
          description: List all products
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    post:
      summary: Create new product
      operationId: createProduct
      tags:
        - Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "201":
          description: Product created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/products/{id}:
    get:
      summary: Get product by id
      operationId: getProductById
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Get product
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Product"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    put:
      summary: Update a product
      operationId: updateProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Product"
      responses:
        "200":
          description: Product updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    delete:
      summary: Delete a product
      operationId: deleteProduct
      tags:
        - Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Product deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/orders:
    get:
      summary: Get all orders
      operationId: getOrders
      tags:
        - Orders
      responses:
        "200":
          description: List all orders
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    post:
      summary: Create an order
      operationId: createOrder
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "201":
          description: Order created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/orders/{id}:
    get:
      summary: Get order by id
      operationId: getOrderById
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: order founded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Order"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    put:
      summary: Update an order
      operationId: updateOrder
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Order"
      responses:
        "200":
          description: Order updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    delete:
      summary: Delete an order
      operationId: deleteOrder
      tags:
        - Orders
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: Order deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/order-product:
    get:
      summary: Get all order's items
      operationId: getOrderProducts
      tags:
        - Order Products
      responses:
        "200":
          description: List all items of an order
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrderProduct"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    post:
      summary: Create new item of an order
      operationId: createOrderProduct
      tags:
        - Order Products
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderProduct"
      responses:
        "201":
          description: Ítem created
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

  /api/order-product/{id}:
    get:
      summary: get a product of a order by id
      operationId: getOrderProductById
      tags:
        - Order Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "200":
          description: Ítem founded
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OrderProduct"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    put:
      summary: Update order product
      operationId: updateOrderProduct
      tags:
        - Order Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrderProduct"
      responses:
        "200":
          description: Product updated
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
    delete:
      summary: Delete an order product
      operationId: deleteOrderProduct
      tags:
        - Order Products
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        "204":
          description: product deleted
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponseBody"

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        description:
          type: string

    Order:
      type: object
      properties:
        id:
          type: integer
        description:
          type: string
        status:
          type: string
        products:
          type: array
          items:
            $ref: "#/components/schemas/Product"

    OrderProduct:
      type: object
      properties:
        order_id:
          type: integer
        product_id:
          type: integer

    ErrorResponseBody:
      type: object
      properties:
        message:
          type: string
        date_and_time:
          type: string
        code:
          type: string
